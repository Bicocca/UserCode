process fakerateanalysis = {

#  include "FWCore/MessageLogger/data/MessageLogger.cfi"
  include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"	
  include "Geometry/CaloEventSetup/data/CaloGeometry.cfi"
  include "SimGeneral/HepPDTESSource/data/pythiapdt.cfi"
  include "PhysicsTools/HepMCCandAlgos/data/genCandidates.cfi"
  include "PhysicsTools/HepMCCandAlgos/data/genParticleCandidatesFast.cfi"
  include "PhysicsTools/RecoCandAlgos/data/allTracks.cfi"
  
  source = PoolSource {
    untracked vstring fileNames =
    {
     'rfio:/castor/cern.ch/cms/store/mc/2007/7/17/CSA07-QCD_Pt_50_80-2049/0005/04AE7B0D-A339-DC11-8EC2-00E0814134C8.root'
    }
    untracked bool   debugFlag = false
  }
 
  untracked PSet maxEvents = {untracked int32 input = 100}
  untracked PSet options = {untracked bool wantSummary = true}
  
  replace genParticleCandidates.src = VtxSmeared
  
  module resolver = AmbResolver {
    InputTag src = pixelMatchGsfElectrons
    bool filter = true
 }
  
  module refResolver = AmbResolverRef {
    InputTag src = pixelMatchGsfElectrons
    bool filter = true
 }
  
  module minitree = FakeRateMiniTreeProducer {
    InputTag src = resolver
#    InputTag src = pixelMatchGsfElectrons
    string outfilename = 'fakerateminitree.root'
  }
  
  module tkisolation = TkIso {
#    InputTag src = pixelMatchGsfElectrons
#    InputTag src = resolver
    InputTag src = refResolver
    string tracks = "ctfWithMaterialTracks"
    double radiusConeExt = 0.2
    double radiusConeInt = 0.015
    double pTMin = 1.5 
    double lip = 0.1
    double cut = 0.1
    bool filter = true
  }

  module hadisolation = HadIso {
    InputTag src = tkisolation
    string hcalrhits = "hbhereco"
    double radiusConeExt = 0.2
    double radiusConeInt = 0.
    double eTMin = 0.5
    double cut = 0.1
    bool filter = true
  }

  include "EgammaAnalysis/ElectronIDProducers/data/electronId.cfi"
  replace electronId.electronProducer = "hadisolation"
  module elid = EleId {
    string electronIDAssocProducer = "electronId"
    InputTag src = hadisolation
    bool filter = true
  }
  
  // path to full analysis
  #sequence roottree = {resolver,minitree}
  sequence refresolving = {refResolver}
  sequence eselection = {resolver,tkisolation,hadisolation,elid}
  #path p = {roottree & eselection}
  path p = {refresolving,tkisolation}
  #path p = {eselection}
  
  include "Configuration/EventContent/data/EventContent.cff"
  module out = PoolOutputModule { 
    
    untracked string fileName = "FakeRateAnalysis.root"
    untracked PSet options = {untracked bool wantSummary = true}  
    using FEVTSIMEventContent     
  }
  replace out.outputCommands += "drop *"
  replace out.outputCommands += "keep *_*_*_fakerateanalysis"
  replace out.outputCommands += "keep *_pixelMatchGsfElectrons_*_*"

#  service = MessageLogger {
#    untracked vstring destinations =  {"res"}
#    untracked vstring debugModules = {"*"}
#    untracked vstring categories = {"MC","Filter","FwkSummary"}
#
#    untracked PSet res   =  {
##      untracked string threshold = "DEBUG"
#      untracked string threshold = "INFO"
#      untracked PSet WARNING ={untracked int32 limit = 0}
#      untracked PSet INFO ={untracked int32 limit = 0}
#      untracked PSet DEBUG ={untracked int32 limit = 0}
#      untracked PSet Filter ={untracked int32 limit = 1}
#      untracked PSet MC ={untracked int32 limit = 0}
#      untracked PSet FwkSummary ={untracked int32 limit = 100000000}
#    }
#  }

  endpath outpath = { out }
  
}
