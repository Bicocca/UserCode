process testReference = {

#  include "FWCore/MessageLogger/data/MessageLogger.cfi"
  include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"	
  include "Geometry/CaloEventSetup/data/CaloGeometry.cfi"
  include "SimGeneral/HepPDTESSource/data/pythiapdt.cfi"
  include "PhysicsTools/HepMCCandAlgos/data/genCandidates.cfi"
  include "PhysicsTools/HepMCCandAlgos/data/genParticleCandidatesFast.cfi"
  include "PhysicsTools/RecoCandAlgos/data/allTracks.cfi"

// for the isolation, from EgammaAnalysis/EgammaIsolationProducers/test/testEgammaIsolation.cfg

//  include "EgammaAnalysis/EgammaIsolationProducers/data/egammaElectronTkIsolation.cfi"
//  include "EgammaAnalysis/EgammaIsolationProducers/data/egammaElectronTkNumIsolation.cfi"
//  include "EgammaAnalysis/EgammaIsolationProducers/data/egammaElectronTkRelIsolation.cfi"
//  include "EgammaAnalysis/EgammaIsolationProducers/data/egammaPhotonTkIsolation.cfi"
//  include "EgammaAnalysis/EgammaIsolationProducers/data/egammaPhotonTkNumIsolation.cfi"
//  include "EgammaAnalysis/EgammaIsolationProducers/data/egammaPhotonTkRelIsolation.cfi"
//  include "EgammaAnalysis/EgammaIsolationProducers/data/egammaHcalIsolation.cfi"
//  include "EgammaAnalysis/EgammaIsolationProducers/data/egammaHOE.cfi"
//  include "EgammaAnalysis/EgammaIsolationProducers/data/egammaTowerIsolation.cfi"
//  include "EgammaAnalysis/EgammaIsolationProducers/data/egammaHOETower.cfi"
//  include "EgammaAnalysis/EgammaIsolationProducers/data/egammaEcalIsolationSequence.cff"
//  include "EgammaAnalysis/EgammaIsolationProducers/data/egammaEcalRelIsolationSequence.cff"

  source = PoolSource {
    untracked vstring fileNames =
    {
     'rfio:/castor/cern.ch/cms/store/mc/2007/7/17/CSA07-QCD_Pt_50_80-2049/0005/04AE7B0D-A339-DC11-8EC2-00E0814134C8.root'
    }
    untracked bool   debugFlag = false
  }
 
  untracked PSet maxEvents = {untracked int32 input = 100}
  untracked PSet options = {untracked bool wantSummary = true}
  
  replace genParticleCandidates.src = VtxSmeared
  
  module refResolver = AmbResolverRef {
    InputTag src = pixelMatchGsfElectrons
    bool filter = false
 }

  module refTkisolation = TkIsoRef {
    InputTag src = pixelMatchGsfElectrons
    string tracks = "ctfWithMaterialTracks"
    double radiusConeExt = 0.4
    double radiusConeInt = 0.015
    double pTMin = 1.5 
    double lip = 0.1
#    double cut = 3 #FIXME perform a cut in GeV
    double cut = 0.1  
    bool filter = false
  }

  module refHadisolation = HadIsoRef {
    InputTag src = pixelMatchGsfElectrons
    string hcalrhits = "hbhereco"
    double radiusConeExt = 0.4
    double radiusConeInt = 0.
    double eTMin = 0.5
#    double cut = 3 #FIXME perform a cut in GeV
    double cut = 0.1 
    bool filter = false
  }

  include "EgammaAnalysis/ElectronIDProducers/data/electronId.cfi"
  
  include "FakeRate/EffAnalysis/data/ptdrElectronId_medium.cfi"
  module electronIdMedium = electronId from "EgammaAnalysis/ElectronIDProducers/data/electronId.cfi"
  replace electronIdMedium.algo_psets = {
       {using PTDR_ID_MEDIUM},  {using CutBased_ID}
     }
   
  include "FakeRate/EffAnalysis/data/ptdrElectronId_tight.cfi"
  module electronIdTight = electronId from "EgammaAnalysis/ElectronIDProducers/data/electronId.cfi"
  replace electronIdTight.algo_psets = {
       {using PTDR_ID_TIGHT},  {using CutBased_ID}
  }
   
  module electronIdRobust = electronId from "EgammaAnalysis/ElectronIDProducers/data/electronId.cfi"
  replace electronIdRobust.doPtdrId = false
  replace electronIdRobust.doCutBased = true
//  replace CutBased_ID.electronQuality = "loose"

//
//include "FakeRate/EffAnalysis/data/cutBasedProva.cfi"
//module prova = electronId from "EgammaAnalysis/ElectronIDProducers/data/electronId.cfi"
//replace prova.doCutBased = true
//replace prova.doPtdrId = false
//replace prova.algo_psets = {
//    {using PTDR_ID}, {using CutBased_ID_loose}
//}
//
//include "FakeRate/EffAnalysis/data/cutBasedProva2.cfi"
//module prova2 = electronId from "EgammaAnalysis/ElectronIDProducers/data/electronId.cfi"
//replace prova2.doCutBased = true
//replace prova2.doPtdrId = false
//replace prova2.algo_psets = {
//    {using PTDR_ID}, {using CutBased_ID_tight}
//}
//

 module referenceTester = testReferences {
   InputTag genMetInputTag = genMet    InputTag metInputTag = met   InputTag rawGSF = pixelMatchGsfElectrons
   InputTag ambiguity = refResolver
   InputTag tkIso = refTkisolation
   InputTag hadIso = refHadisolation
   InputTag eleId = electronIdMedium
   InputTag eleIdLoose = electronId
   InputTag eleIdTight = electronIdTight
   InputTag eleIdRobust = electronIdRobust

   InputTag jet = iterativeCone5CaloJets
   InputTag evt = source 
   untracked double deltaCone = 0.5
   untracked string rootfile = 'firstTest.root'

   PSet jetIdParameters = 
     {
        string mcSource = "source"
        bool fillPartons = true
        bool fillHeavyHadrons = false
        bool fillLeptons =  false
        double coneSizeToAssociate = 0.3
        bool physicsDefinition = false
        bool rejectBCSplitting = false
        vstring vetoFlavour = {  }
    }
  }


// ---- analysis paths ------------------------------------------------


#  sequence analysis = {refResolver & refTkisolation & refHadisolation & electronId & electronIdLoose & electronIdTight}
#  sequence analysis = {refResolver & refTkisolation & refHadisolation & electronIdTight & electronIdRobust}
  sequence analysis = {refResolver & refTkisolation}
//  sequence analysis = {refResolver & egammaElectronTkRelIsolation & egammaHcalIsolation & electronIdTight & electronIdRobust }
//  path main_path = {analysis & referenceTester}
  path main_path = {analysis}
  
  include "Configuration/EventContent/data/EventContent.cff"
  module out = PoolOutputModule { 
    
    untracked string fileName = "FakeRateAnalysis.root"
    untracked PSet options = {untracked bool wantSummary = true}  
    using FEVTSIMEventContent     
  }
  replace out.outputCommands += "drop *"
  replace out.outputCommands += "keep *_*_*_testReference"
  replace out.outputCommands += "keep edmHepMCProduct_*_*_*"
#  replace out.outputCommands += "keep recoBasicClusters_*_*_*"
#  replace out.outputCommands += "keep recoSuperClusters_*_*_*"
#  replace out.outputCommands += "keep recoPreshowerClusters_*_*_*"
#  replace out.outputCommands += "keep recoClusterShapes_*_*_*"
  replace out.outputCommands += "keep *_pixelMatchGsfElectrons_*_*"
  replace out.outputCommands += "keep recoGsfTracks_*_*_*"
#  replace out.outputCommands += "keep recoGsfTrackExtras_*_*_*"
  replace out.outputCommands += "keep recoCaloJets_iterativeCone5CaloJets_*_*"  
  
  endpath end_path = { out }

}
