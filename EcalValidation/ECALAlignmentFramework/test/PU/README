///==== ECAL Alignment: PU effect ====


///==== create ROOT file for comparison analysis



TH1F histo("histo","histo",25,0,25)
for (int i=0; i<1000000; i++) {histo.Fill(gRandom->Poisson(1));}
histo.Draw()
for (int iBin = 0; iBin < histo.GetNbinsX(); iBin++) {std::cout << histo.GetBinContent(iBin+1) / histo.GetIntegral() << ", ";  } std::cout << std::endl;

TH1F histo("histo","histo",25,0,25)
for (int i=0; i<1000000; i++) {histo.Fill(gRandom->Poisson(2));}
histo.Draw()
for (int iBin = 0; iBin < histo.GetNbinsX(); iBin++) {std::cout << histo.GetBinContent(iBin+1) / histo.GetIntegral() << ", ";  } std::cout << std::endl;

TH1F histo("histo","histo",25,0,25)
for (int i=0; i<1000000; i++) {histo.Fill(gRandom->Poisson(3));}
histo.Draw()
for (int iBin = 0; iBin < histo.GetNbinsX(); iBin++) {std::cout << histo.GetBinContent(iBin+1) / histo.GetIntegral() << ", ";  } std::cout << std::endl;

TH1F histo("histo","histo",25,0,25)
for (int i=0; i<1000000; i++) {histo.Fill(gRandom->Poisson(4));}
histo.Draw()
for (int iBin = 0; iBin < histo.GetNbinsX(); iBin++) {std::cout << histo.GetBinContent(iBin+1) / histo.GetIntegral() << ", ";  } std::cout << std::endl;

TH1F histo("histo","histo",25,0,25)
for (int i=0; i<1000000; i++) {histo.Fill(gRandom->Poisson(5));}
histo.Draw()
for (int iBin = 0; iBin < histo.GetNbinsX(); iBin++) {std::cout << histo.GetBinContent(iBin+1) / histo.GetIntegral() << ", ";  } std::cout << std::endl;

TH1F histo("histo","histo",25,0,25)
for (int i=0; i<1000000; i++) {histo.Fill(gRandom->Poisson(6));}
histo.Draw()
for (int iBin = 0; iBin < histo.GetNbinsX(); iBin++) {std::cout << histo.GetBinContent(iBin+1) / histo.GetIntegral() << ", ";  } std::cout << std::endl;

TH1F histo("histo","histo",25,0,25)
for (int i=0; i<1000000; i++) {histo.Fill(gRandom->Poisson(7));}
histo.Draw()
for (int iBin = 0; iBin < histo.GetNbinsX(); iBin++) {std::cout << histo.GetBinContent(iBin+1) / histo.GetIntegral() << ", ";  } std::cout << std::endl;

TH1F histo("histo","histo",25,0,25)
for (int i=0; i<1000000; i++) {histo.Fill(gRandom->Poisson(8));}
histo.Draw()
for (int iBin = 0; iBin < histo.GetNbinsX(); iBin++) {std::cout << histo.GetBinContent(iBin+1) / histo.GetIntegral() << ", ";  } std::cout << std::endl;

TH1F histo("histo","histo",25,0,25)
for (int i=0; i<1000000; i++) {histo.Fill(gRandom->Poisson(9));}
histo.Draw()
for (int iBin = 0; iBin < histo.GetNbinsX(); iBin++) {std::cout << histo.GetBinContent(iBin+1) / histo.GetIntegral() << ", ";  } std::cout << std::endl;

TH1F histo("histo","histo",25,0,25)
for (int i=0; i<1000000; i++) {histo.Fill(gRandom->Poisson(10));}
histo.Draw()
for (int iBin = 0; iBin < histo.GetNbinsX(); iBin++) {std::cout << histo.GetBinContent(iBin+1) / histo.GetIntegral() << ", ";  } std::cout << std::endl;




./bin/MCDATAComparisonPLOTTool.exe test/PU/testPU_1.cfg 
./bin/MCDATAComparisonPLOTTool.exe test/PU/testPU_2.cfg 
./bin/MCDATAComparisonPLOTTool.exe test/PU/testPU_3.cfg 
./bin/MCDATAComparisonPLOTTool.exe test/PU/testPU_4.cfg 
./bin/MCDATAComparisonPLOTTool.exe test/PU/testPU_5.cfg 
./bin/MCDATAComparisonPLOTTool.exe test/PU/testPU_6.cfg 
./bin/MCDATAComparisonPLOTTool.exe test/PU/testPU_7.cfg 
./bin/MCDATAComparisonPLOTTool.exe test/PU/testPU_8.cfg 
./bin/MCDATAComparisonPLOTTool.exe test/PU/testPU_9.cfg 
./bin/MCDATAComparisonPLOTTool.exe test/PU/testPU_10.cfg 


///==== analyse difference between MC for a given "PU" ====

r00t test/draw.cxx\(\"output/out_PU_1.root\",\"PU1\",\"W\"\)
r00t test/draw.cxx\(\"output/out_PU_2.root\",\"PU2\",\"W\"\)
r00t test/draw.cxx\(\"output/out_PU_3.root\",\"PU3\",\"W\"\)
r00t test/draw.cxx\(\"output/out_PU_4.root\",\"PU4\",\"W\"\)
r00t test/draw.cxx\(\"output/out_PU_5.root\",\"PU5\",\"W\"\)
r00t test/draw.cxx\(\"output/out_PU_6.root\",\"PU6\",\"W\"\)
r00t test/draw.cxx\(\"output/out_PU_7.root\",\"PU7\",\"W\"\)
r00t test/draw.cxx\(\"output/out_PU_8.root\",\"PU8\",\"W\"\)
r00t test/draw.cxx\(\"output/out_PU_9.root\",\"PU9\",\"W\"\)
r00t test/draw.cxx\(\"output/out_PU_10.root\",\"PU10\",\"W\"\)



///==== analyse difference between MC for a given "PU" ====

r00t test/draw_evolution.cxx\(\"test/PU/list.txt\",\"evolutionPU\"\)

    
  