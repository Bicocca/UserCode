[Input]
treeName  = ntupleEcalAlignment/myTree

fileSamples = test/PU/samples.txt

inputDirectory = data
inputRootName = out

# Lumi = 82.8
# Lumi = 138.2
# Lumi = 121.2


# Lumi = 50
Lumi = 183.2
LumiSyst = 0.00

# 1 = discovery, 0 = exclusion
Discovery = 0

DataName = May10

# 1 = normalize to data, 0 = normalize to lumi
Normalize = 1

debug = false

[PU]
PUMC   = 0.0698146584, 0.0698146584, 0.0698146584, 0.0698146584, 0.0698146584, 0.0698146584, 0.0698146584, 0.0698146584, 0.0698146584, 0.0698146584, 0.0698146584, 0.0630151648, 0.0526654164, 0.0402754482, 0.0292988928, 0.0194384503, 0.0122016783, 0.007207042, 0.004003637, 0.0020278322, 0.0010739954, 0.0004595759, 0.0002229748, 0.0001028162, 4.58337152809607E-05
PUDATA = 3.62563e-06, 2.80117e-05, 0.000125332, 0.000369243, 0.000836527, 0.00151422, 0.00225608, 0.00291029, 0.00327714, 0.00327734, 0.00294158, 0.00240218, 0.0018036, 0.00125504, 0.000803821, 0.000482184, 0.000272667, 0.00014423, 6.99547e-05, 3.35246e-05, 1.59677e-05, 6.1586e-06, 2.7068e-06, 1.06782e-06, 3.97329e-07


# r00t PUDistribution.root 
#root [2] TH1F* th1 = (TH1F*) _file0->Get("pileup")
#root [3] for (int iBin = 0; iBin < th1->GetNbinsX(); iBin++) {std::cout << th1->GetBinContent(iBin+1) / th1->GetIntegral() << ", ";  } std::cout << std::endl;

[Plot]

VarFile = test/testVar.txt
XSection  = 85e-3

[Selections]
CutFile   = test/testCut.txt
CutHRFile = test/testCutHR.txt

[Output]
outFileName = output/out_PU_9.root


