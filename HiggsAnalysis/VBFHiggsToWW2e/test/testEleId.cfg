process testEleID = {


#  include "FWCore/MessageLogger/data/MessageLogger.cfi"
include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
include "Geometry/CaloEventSetup/data/CaloGeometry.cfi"
include "SimGeneral/HepPDTESSource/data/pythiapdt.cfi"
include "PhysicsTools/HepMCCandAlgos/data/genCandidates.cfi"
include "PhysicsTools/HepMCCandAlgos/data/genParticleCandidatesFast.cfi"
include "PhysicsTools/RecoCandAlgos/data/allTracks.cfi"
include "Configuration/EventContent/data/EventContent.cff"
//include "EgammaAnalysis/ElectronIDProducers/data/electronId.cfi"
include "HiggsAnalysis/VBFHiggsToWW2e/data/allEleIds.cfi"


# ---- input files ---------------------------------------


source = PoolSource 
{ 
  untracked vstring fileNames = 
    {
      "file:/gwtera4/users/govoni/VBF/skims/H160/VBFskim_1.root"
    } 
}

untracked PSet maxEvents = {untracked int32 input = 100}
untracked PSet options = { untracked bool wantSummary = true }




# --- the output histos service -----------------------------------


  service = TFileService 
    { 
       string fileName = "TestEleId.root"
    }
 

# --- the message logger ------------------------------------------


#    include "Calibration/EcalAlCaRecoProducers/test/MessageLoggerPG.cfg"
service = MessageLogger {}


# ---- filtering the MC VBF part of the signal -------------------


module my_VBFMCProcessFilter = VBFMCProcessFilter
  {
    untracked string moduleLabel = "source"
  }


# ---- filtering the VBF part of the signal -------------------


module my_VBFProcessFilter = VBFProcessFilter
  {
    InputTag jetInputTag = iterativeCone5CaloJets
    double jetEtaMax = 5
    double jetPtMin = 15 # GeV
    double tagJetsDeltaEtaMin = 3
    double tagJetsDeltaEtaMax = 10
    double tagJetsInvMassMin = 400 # GeV
    double tagJetsInvMassMax = 1000 # GeV
    bool checkOpposite = false
  }


# ---- look for at least two leptons in the event -------------------


module leptonsNumberFilter = VBFLeptonsNumFilter
  {
    InputTag GSFInputTag  = pixelMatchGsfElectrons
    InputTag muInputTag = muons
    int32 minLeptonsNum = 2
    int32 maxLeptonsNum = 10 # very big
    double eleEtaMax = 10 # very big
    double elePtMin = 0
    double muEtaMax = 10
    double muPtMin = 0
  }


# ---- jet veto filter -----------------------------------


module jetVeto = VBFJetVetoFilter
  {
    InputTag jetInputTag  = iterativeCone5CaloJets
    double jetEtaMax = 1.5
    double jetPtMin = 15 # GeV
  }


# ---- cloning the tag jets into the event --------------------


module tagJets = VBFJetTagger
  {
    InputTag jetInputTag  = iterativeCone5CaloJets
    string tagJetsName = "tagJets"
    double jetEtaMax = 5
    double jetPtMin = 15 # GeV
    double gatherConeSize = 0.1
  }


# ---- getting the MC tag jets --------------------


module findTagMCJets = VBFMCJetTagger 
  {
   InputTag MCParticlesInputTag = genParticleCandidates
   string MCtagJetsName = "VBFMCTagJet"
  }


# ---- simple cloning the tag jets into the event --------------------


module simpleTagJets = VBFJetTagSelector
  {
    InputTag src  = iterativeCone5CaloJets
    double jetEtaMax = 5
    double jetPtMin = 15 # GeV
    bool filter = false
  }


# ---- testing analyzer --------------------


module testEleID = VBFEleIDMeter
{
  InputTag GSFInputTag  = pixelMatchGsfElectrons
  InputTag MCtruthInputTag = source
  InputTag eleIDPTDRLooseInputTag   = electronId
  InputTag eleIDPTDRMediumInputTag  = electronIdMedium
  InputTag eleIDPTDRTightInputTag   = electronIdTight
  InputTag eleIDOTHERRobustInputTag = otherElectronIdRobust
  InputTag eleIDOTHERLooseInputTag = otherElectronIdLoose
  InputTag eleIDOTHERTightInputTag  = otherElectronIdTight
}


# ---- analysis paths --------------------------------------


path testing = {my_VBFMCProcessFilter,testEleID}


} # process testEleID
