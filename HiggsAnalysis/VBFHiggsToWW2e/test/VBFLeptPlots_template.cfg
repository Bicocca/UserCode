process testLeptPlotting = {


#  include "FWCore/MessageLogger/data/MessageLogger.cfi"
include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
include "Geometry/CaloEventSetup/data/CaloGeometry.cfi"
include "SimGeneral/HepPDTESSource/data/pythiapdt.cfi"
include "PhysicsTools/HepMCCandAlgos/data/genCandidates.cfi"
include "PhysicsTools/HepMCCandAlgos/data/genParticleCandidatesFast.cfi"
include "PhysicsTools/RecoCandAlgos/data/allTracks.cfi"
include "Configuration/EventContent/data/EventContent.cff"
//include "EgammaAnalysis/ElectronIDProducers/data/electronId.cfi"
include "HiggsAnalysis/VBFHiggsToWW2e/data/allEleIds.cfi"


# ---- input files ---------------------------------------


include "HiggsAnalysis/VBFHiggsToWW2e/data/datasets/DATASETFILE"
untracked PSet maxEvents = {untracked int32 input = -1}
untracked PSet options = { untracked bool wantSummary = true }


# --- the output histos service -----------------------------------


  service = TFileService 
    { 
       string fileName = "OUTPUT_ROOT"
    }
 

# --- the message logger ------------------------------------------


#    include "Calibration/EcalAlCaRecoProducers/test/MessageLoggerPG.cfg"
service = MessageLogger {}


# ---- filtering the MC VBF part of the signal -------------------


module my_VBFMCProcessFilter = VBFMCProcessFilter
  {
    untracked string moduleLabel = "source"
  }


# ---- filtering the VBF part of the signal -------------------


module my_VBFProcessFilter = VBFProcessFilter
  {
    InputTag jetInputTag = iterativeCone5CaloJets
    double jetEtaMax = 5
    double jetPtMin = 15 # GeV
    double tagJetsDeltaEtaMin = 3
    double tagJetsDeltaEtaMax = 10
    double tagJetsInvMassMin = 400 # GeV
    double tagJetsInvMassMax = 1000 # GeV
    bool checkOpposite = false
  }


# ---- choose a decay channel -------------------


module channelSelector = VBFMCChannelFilter
{
  InputTag MCtruthInputTag = genParticleCandidates
  int32 channel = 2 # 1 = uu, 2 = ee, 3 = ue
  bool filter = true
}


# ---- look for at least two leptons in the event -------------------


module leptonsNumberFilter = VBFLeptonsNumFilter
  {
//    InputTag GSFInputTag  = pixelMatchGsfElectrons
    InputTag GSFInputTag  = refResolver
    InputTag muInputTag = muons
    bool useEleId = false
    InputTag eleIDInputTag = electronId
    int32 minLeptonsNum = 2
    int32 maxLeptonsNum = 10 # very big
    double eleEtaMax = 10 # very big
    double elePtMin = 0
    double muEtaMax = 10
    double muPtMin = 0
  }


# ---- jet veto filter -----------------------------------


module jetVeto = VBFJetVetoFilter
  {
    InputTag jetInputTag  = iterativeCone5CaloJets
    double jetEtaMax = 1.5
    double jetPtMin = 15 # GeV
  }


# ---- testing analyzer --------------------


module VBFLeptPlotter = VBFLeptPlots
{
//  InputTag GSFInputTag  = pixelMatchGsfElectrons
  InputTag GSFInputTag  = refResolver
  InputTag muonsInputTag   = muons
}


# ---- analysis paths --------------------------------------


path testing = {leptonsNumberFilter,VBFLeptPlotter}


} # process testLeptPlotting
