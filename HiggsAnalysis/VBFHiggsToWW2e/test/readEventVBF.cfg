process VBFread = {

include "PhysicsTools/HepMCCandAlgos/data/genParticleCandidates.cfi"
include "SimGeneral/HepPDTESSource/data/pythiapdt.cfi"


# per hcal isolation
include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
include "Geometry/CaloEventSetup/data/CaloGeometry.cfi"



#per ele id
include "EgammaAnalysis/ElectronIDProducers/data/electronId.cfi"

#include "SimGeneral/HepPDTESSource/data/pythiapdt.cfi"
#include "PhysicsTools/HepMCCandAlgos/data/genCandidates.cfi"
#include "PhysicsTools/HepMCCandAlgos/data/genParticleCandidatesFast.cfi"
#include "PhysicsTools/RecoCandAlgos/data/allTracks.cfi"

# ----   keep the logging output to a nice level ----------------------


service = MessageLogger {}


# ---- electron ID modules  --------------------------------------


include "EgammaAnalysis/ElectronIDProducers/data/electronId.cfi"
replace electronId.electronProducer = "hadisolation"
module elid = EleId {
    string electronIDAssocProducer = "electronId"
    InputTag src = hadisolation
    bool filter = true
  }


# ---- looking the different types  -------------------------------


module my_VBFReadEvent  = VBFReadEvent  {

  InputTag metInputTag = met
  InputTag genMetInputTag  = genMet
  InputTag jetInputTag  = iterativeCone5CaloJets
  InputTag genJetInputTag  = iterativeCone5GenJets
  InputTag GSFInputTag  = pixelMatchGsfElectrons
  #InputTag eleIDInputTag  = 
  InputTag MCtruthInputTag  =  genParticleCandidates #source
  InputTag MC = source
  InputTag muInputTag = globalMuons
  InputTag trackInputTag = ctfWithMaterialTracks
  InputTag hcalRecHitProducer = hbhereco
  InputTag emObjectProducer =  pixelMatchGsfElectrons
  
  double ptMin = 1.5
  double intRadius = 0.0
  double extRadius = 1.0
  double maxVtxDist = 30.
  
  #hcal iso
  double etMinHI = 0.0
  double intRadiusHI = 0.15 
  double extRadiusHI = 0.3
  
  }
  

# ---- input files ---------------------------------------


source = PoolSource 
{ 
      untracked vstring fileNames = {"file:///tmp/tancini/VBFsignal.root"} 
}

untracked PSet maxEvents = {untracked int32 input = 10}

  
# ---- saving the ouptut -----------------------------------------------------


module saving = PoolOutputModule
{
      untracked string fileName = "/tmp/tancini/VBFreaded.root"
}


# ---- print generated tree info ---------------------------------------------


module printTree = ParticleTreeDrawer
{ 
     InputTag src= genParticleCandidates 
}


# ---- print decay tree info ---------------------------------------------


module printDecay = ParticleDecayDrawer {
    InputTag src = genParticles
#    untracked bool printP4 = true
#    untracked bool printPtEtaPhi = true
#    untracked vint32 status = { 3 }
  }


# ---- analysis paths ---------------------------------------------


  path filtering = {my_VBFReadEvent }
  endpath save = {saving}

}
