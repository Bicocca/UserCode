[CRAB]
jobtype = cmssw
scheduler = glite
#server_name = bari


[CMSSW]

###to run on the CAF
#dbs_url = http://cmsdbsprod.cern.ch/cms_dbs_caf_analysis_01/servlet/DBSServlet

### The data you want to access (to be found on DBS)
datasetpath = /TTToLNuBQQB_7TeV-powheg-pythia6/Spring10-START3X_V26-v1/GEN-SIM-RECO

### The ParameterSet you want to use
pset = test_TTBar_MCDumper_cfg.py

### Splitting parameters
total_number_of_events = 1000
events_per_job         = 100000
#number_of_jobs         = 1

### The output files (comma separated list)
output_file = MCDumper_TTBar.root


[USER] 

### if using the CAF, you don't need specify /srm/managerv2?SFN=
use_central_bossDB = 0
use_boss_rt        = 0
copy_data          = 1

storage_port    = 8444
storage_path    = /srm/managerv2?SFN=/cms
storage_element = storm.mib.infn.it

# la directory di lavoro su storm.mib.infn.it che abbiamo creato per gli output dei job
user_remote_dir  = /users/amassiro/CaVa/TTBarPOWHEGHERWIG
ui_working_dir = /gwpool/users/amassiro/CaVa/Releases/CMSSW_3_5_6/src/TTBarAnalysis/test/doCrabTTBarPOWHEGHERWIG


[GRID]
rb = CERN
proxy_server = myproxy.cern.ch
virtual_organization = cms
retry_count = 0
lcg_catalog_type = lfc
lfc_host = lfc-cms-test.cern.ch
lfc_home = /grid/cms

### Black and White Lists management:
### By Storage element
se_black_list = T0
#se_white_list =

### By ComputingElement
#ce_black_list =
#ce_white_list =
