process testTreeProducerJet = {


 include "Configuration/StandardSequences/data/Reconstruction.cff"
 include "Configuration/StandardSequences/data/FakeConditions.cff"
// include "Configuration/StandardSequences/data/Simulation.cff"
// include "Configuration/StandardSequences/data/MixingNoPileUp.cff"
// include "Configuration/StandardSequences/data/VtxSmearedGauss.cff"


    include "HiggsAnalysis/VBFHiggsToWWto2l2nu/data/allEleIds.cfi"
    include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"    
    include "Geometry/CaloEventSetup/data/CaloGeometry.cfi"
    include "Geometry/CommonDetUnit/data/globalTrackingGeometry.cfi"
//    include "Geometry/CaloEventSetup/data/EcalTrigTowerConstituents.cfi"
//    include "Geometry/CommonDetUnit/data/bareGlobalTrackingGeometry.cfi"
//    include "Geometry/DTGeometry/data/dtGeometry.cfi"
//    include "Geometry/CSCGeometry/data/cscGeometry.cfi"
//    include "RecoMuon/DetLayers/data/muonDetLayerGeometry.cfi"
//    include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"
    include "Geometry/MuonNumbering/data/muonNumberingInitialization.cfi"
  


//PG --- for the jets plus tracks corrections --------------


//    include "MagneticField/Engine/data/uniformMagneticField.cfi"
//     replace UniformMagneticFieldESProducer.ZFieldInTesla = 0.0
//     es_source idealMagneticFieldRecordSource = EmptyESSource 
//       {
//         string recordName = "IdealMagneticFieldRecord"
//         bool iovIsRunNotTime = true
//         vuint32 firstValid = {1}
//       }

//     es_module = UniformMagneticFieldESProducer 
//       {
//         double ZFieldInTesla = 0.0
//       }


    //PG from the twiki
    include "JetMETCorrections/MCJet/data/ZSPJetCorrections152.cff"
    include "JetMETCorrections/JetPlusTrack/data/JetPlusTrackCorrections.cff"

    es_prefer JetPlusTrackZSPCorrectorIcone5 = JetPlusTrackCorrectionService {}
    replace  JetPlusTrackZSPCorrectorIcone5.respalgo = 5
    replace  JetPlusTrackZSPCorrectorIcone5.TrackAssociatorParameters.useMuon = false

    //PG from Fefe
//     include "JetMETCorrections/Modules/data/JetMETCorrections.cff"
// //    include "JetMETCorrections/MCJet/data/ZSPJetCorrectionsSpring07.cff"
// //    include "JetMETCorrections/JetPlusTrack/data/JetPlusTrackCorrections.cff"
//     sequence myMCJetCorrections = { MCJetCorJetIcone5, MCJetCorJetMcone5, MCJetCorJetFastjet6 }
//     sequence myJetPlusTrackCorrections = {  ZSPJetCorJetIcone5, JetPlusTrackZSPCorJetIcone5 }
//     sequence myJETCorrections = {myMCJetCorrections, myJetPlusTrackCorrections}

//PG running with AOD
//PG from JetMETCorrections/JetPlusTrack/test/JPTanalyzerAOD.cfg

//replace  JetPlusTrackZSPCorrectorIcone5InCone.respalgo = 5
//replace  JetPlusTrackZSPCorrectorIcone5InCone.TrackAssociatorParameters.useMuon = false
//replace  JetPlusTrackZSPCorrectorIcone5InCone.TrackAssociatorParameters.useEcal = false
//replace  JetPlusTrackZSPCorrectorIcone5InCone.TrackAssociatorParameters.useHcal = false
//replace  JetPlusTrackZSPCorrectorIcone5InCone.TrackAssociatorParameters.useCalo = true
//replace  JetPlusTrackZSPCorrectorIcone5InCone.TrackAssociatorParameters.useHO = false
//
////replace  JetPlusTrackZSPCorrectorIcone5.respalgo = 5
////replace  JetPlusTrackZSPCorrectorIcone5.TrackAssociatorParameters.useMuon = false
//replace  JetPlusTrackZSPCorrectorIcone5.TrackAssociatorParameters.useEcal = false
//replace  JetPlusTrackZSPCorrectorIcone5.TrackAssociatorParameters.useHcal = false
//replace  JetPlusTrackZSPCorrectorIcone5.TrackAssociatorParameters.useCalo = true
//replace  JetPlusTrackZSPCorrectorIcone5.TrackAssociatorParameters.useHO = false

    //PG to use iterative tracks instead of the kfTracks
    include "RecoParticleFlow/PFTracking/data/iterativeTk.cff"
    module IterativeAlgoTracks = TrackMerger 
      {
        VInputTag src = 
          {
            firstvtxFilt:,
            secondvtxFilt:,
            thirdvtxFilt:,
            fourthvtxFilt:
          }
      }


// --- jet corrections --------------------------------


// from : https://twiki.cern.ch/twiki/bin/view/CMS/WorkBookJetAnalysis#JetCorrections
//   scramv1 project CMSSW CMSSW_1_6_7
//   cd CMSSW_1_6_7/src
//   cmscvsroot CMSSW
//   cvs co -r jet_corrections_168 JetMETCorrections/MCJet
//   cvs co -r jet_corrections_168 JetMETCorrections/Modules
//   cvs co -r jet_corrections_168 CondFormats/JetMETObjects
//   cvs co -r jet_corrections_168 RecoJets/JetAnalyzers
//   scramv1 b // in case compilation crashes because of the file classes.h just remove it.
//   eval `scramv1 runtime -csh`
//   cd RecoJets/JetAnalyzers/test
//   cmsRun L2L3CorJetsExample.cfg

//   es_source L2JetCorrectorIcone5 = L2RelativeCorrectionService {
//            string tagName = 'CMSSW_152_L2Relative_iterativeCone5'
//            string label = 'L2RelativeJetCorrectorIcone5'
//    }
//
//   es_source L3JetCorrectorIcone5 = L3AbsoluteCorrectionService {
//            string tagName = 'CMSSW_152_L3Absolute_iterativeCone5'
//            string label = 'L3AbsoluteJetCorrectorIcone5'
//    }
//   # Pick MCJetCorrectionService to set record's IOV
//   es_prefer L2JetCorrectorIcone5 = L2RelativeCorrectionService {}
//
//   module L2JetCorJetIcone5 = JetCorrectionProducer {
//          InputTag src   = iterativeCone5CaloJets
//          vstring correctors = {"L2RelativeJetCorrectorIcone5"}
//          untracked string alias = "L2JetCorJetIcone5"
//   }
//
//   module L3JetCorJetIcone5 = JetCorrectionProducer {
//          InputTag src   = L2JetCorJetIcone5
//          vstring correctors = {"L3AbsoluteJetCorrectorIcone5"}
//          untracked string alias = "L3JetCorJetIcone5"
//   }
//  
//  sequence L2L3jetCorrection = {L2JetCorJetIcone5,L3JetCorJetIcone5}


// --------------------------------------------------------------------


    service = MessageLogger {}

    module GenJetProducer = VBFJetProducer
      {
        InputTag jetInputTag = iterativeCone5GenJets
      }
   
    module JetProducer = VBFJetProducer
      {
        InputTag jetInputTag = iterativeCone5CaloJets::Rec1
        //PG come mai Rec1?
      }

    module JPTproducer = VBFJetProducer
      {
        InputTag jetInputTag = JetPlusTrackZSPCorJetIcone5
      }

//    include "JetMETCorrections/Modules/data/JetMETCorrections.cff"

//    module MCcorrJetProducer = VBFJetProducer
//      {
//        InputTag jetInputTag = MCJetCorJetIcone5::testTreeProducer
//      }

//    module L3CorrJetProducer = VBFJetProducer
//      {
//        InputTag jetInputTag = L3JetCorJetIcone5
//      }


// --------------------------------------------------------------------


    module treeProducer =  VBFTreeProducer
      {
        string SampleName = "qqH"
        double SampleCrossSection = 0

        string ResultDir = "./"
        string MiniTreeFilename = "JetTest_pg"

        InputTag vertexProducer = blub
        InputTag trackProducer  = blub

        VPSet particlesList =
          {
            {
              string branchName = "caloCone5Jets"
              InputTag src = JetProducer
            }          
//            ,{
//              string branchName = "MCcorrCaloCone5Jets"
//              InputTag src = MCcorrJetProducer
//            }          
            ,{
              string branchName = "JetPlusTracks"
              InputTag src = JPTproducer
            }          
            ,{
              string branchName = "GenJetCaloCone5"
              InputTag src = GenJetProducer
            }          
//            ,{
//              string branchName = "L3CorrCaloCone5Jets"
//              InputTag src = L3CorrJetProducer
//            }          


          }

      string use_mcInfo = "no" // yes / no

    }


// --------------------------------------------------------------------


    untracked PSet maxEvents = {untracked int32 input = 100}
    source = PoolSource
    {
        
      untracked vstring fileNames = 
        {
          #PG H210@CERN
          '/store/mc/2007/12/11/CSA07-H210_WW_2l-1197355886/0025/0C1B6C2E-D6A7-DC11-A89C-000423D991BC.root'
      #    "file:/home/ws/bd120/data/job_0_H140_WW.root",
       #   "file:/home/ws/bd120/data/job_1_H140_WW.root"            
          
#	  "file:/home/ws/bd252/data/job_0_H140_WW.root",
//         "file:/home/ws/bd252/data/job_1_H140_WW.root"
          
        }
        
    }

    path preparation = 
      {
        JetProducer
//      , MCJetCorJetIcone5 , MCcorrJetProducer
        , iterativeTk , IterativeAlgoTracks
        , ZSPJetCorrections , JetPlusTrackZSPCorJetIcone5 , JPTproducer
//        , ZSPJetCorrections , JetPlusTrackCorrections , JPTproducer
//        , myJETCorrections , JPTproducer
//        , L2L3jetCorrection , L3CorrJetProducer
        , GenJetProducer
    }
      



    module saving = PoolOutputModule{

                untracked string fileName = "jetVBFProducers.root"
                untracked vstring outputCommands = {

                        "drop *",
                        "keep *_*_*_testTreeProducer"
//			"keep recoCaloJets_*_*_*"
//                      "keep *"
                }
      }

    endpath outpath = 
      {
        treeProducer
//        , saving
      }

}

