# stream selected electrons 
#
#
process AlCaElectronsProductionTesting = 
{

# --- general parameters ------------------------------------------


  untracked PSet maxEvents = {untracked int32 input = -1 }
  untracked PSet options = {
      untracked bool wantSummary = true  # default is false
  }


# --- the output histos service -----------------------------------


  service = TFileService 
    { 
       string fileName = "Test.root"
    }
 

# --- the message logger ------------------------------------------


#    include "Calibration/EcalAlCaRecoProducers/test/MessageLoggerPG.cfg"


# --- leggo il file ------------------------------------------------


  source = PoolSource {
    untracked vstring fileNames =
    {
#  'file:/data/calib/famos/ElectronsFamos.root'
#    ' rfio:/castor/cern.ch/user/b/beaucero/AlCaReco/Batchalcarecowith2Prod.root'
#    'file:/data/calib/csa07/alcaReco/Famos/EEFamos.root',
#    'file:/data/calib/csa07/alcaReco/Famos/EEElectrons2.root'
    'file:/data/calib/csa07/alcaReco/Famos/ElectronsIMAFilter.root'
#      'file:/tmp/govoni/etaFiltered.root'
#      'file:/tmp/govoni/alCaElectrons_se.root'
#      'file:etaAndPhiFiltered.root'
# 'rfio:/castor/cern.ch/user/p/presotto/fastExec/100pb.root'
 }
    untracked uint32 debugVerbosity = 1
    untracked bool   debugFlag     = true
    }
#include "Calibration/EcalAlCaRecoProducers/test/Frontier.cff"
#include "Calibration/EcalAlCaRecoProducers/test/100pb.cff"
#include "Calibration/EcalAlCaRecoProducers/test/10pb.cff"

# --- alCaReco producer ------------------------------------------------


#    include "Calibration/EcalAlCaRecoProducers/data/alCaIsolatedElectrons.cfi"

    #  AlCaElectrons producer
    module alCaIsolatedElectrons = AlCaElectronsProducer
      {
        InputTag ebRecHitsLabel = caloRecHits:EcalRecHitsEB
        InputTag eeRecHitsLabel = caloRecHits:EcalRecHitsEE
        InputTag electronLabel = electronFilter
        
        string alcaBarrelHitCollection = "alcaBarrelHits"
        string alcaEndcapHitCollection = "alcaEndcapHits"
        
        int32 etaSize = 5
        int32 phiSize = 11
      }

# --- electrons selection ------------------------------------------


  module electronFilter = EtaPtMinPixelMatchGsfElectronFullCloneSelector
    {
      InputTag src = pixelMatchGsfElectrons 
      bool filter = true
      double ptMin = 5.0
      double etaMin = -3.0    
      double etaMax = 3.9
    }
  module secondFilter = EtaPtMinPixelMatchGsfElectronFullCloneSelector
    {
      InputTag src = electronFilter
      bool filter = true
      double ptMin = 5.0
      double etaMin = -2.2
      double etaMax = 2.7
    }
    
  module phiFiltering = PhiRangeSelector     
   {   
      InputTag src = secondFilter 
      bool filter = true
      double phiMin = -1000
      double phiMax = 1000     
    }

  module IMAFiltering = IMASelector     
    {
      InputTag src = electronFilter 
      bool filter = true
      double ESCOPinMin = 0.89
      double ESCOPinMax = 1.12 
      double ESeedOPoutMin = 0.5  
      double ESeedOPoutMax = 1.65 
      double PinMPoutOPinMin = -0.9 
      double PinMPoutOPinMax = 2.95 
    }



# --- results testing ------------------------------------------------


    module alcatestingcalib = AlCaElectronsTestCalib 
      {
#        InputTag alcaBarrelHitCollection = miscalrechit:alcaBarrelHitsRecalib
#        InputTag alcaEndcapHitCollection = miscalrechit:alcaEndcapHitsRecalib
        InputTag alcaBarrelHitCollection = alCaIsolatedElectrons:alcaBarrelHits
        InputTag alcaEndcapHitCollection = alCaIsolatedElectrons:alcaEndcapHits        
#       InputTag electronLabel = electronFilter  //ricordarsi di switchare
#        InputTag electronLabel = secondFilter  
#        InputTag electronLabel = phiFiltering  
        InputTag electronLabel = IMAFiltering  
        untracked double Refactor = 1.0
        untracked double Refactor_mean = 1.0        
      }


# --- percorsi di analisi ------------------------------------------------


#    path p1={ electronFilter , alCaIsolatedElectrons, alcatestingcalib }
#    path p3={ electronFilter}
#    path p2={ electronFilter, alCaIsolatedElectrons , alcatestingcalib}
#    path p5 = {alcatestingcalib, miscalrechit}
#    path p6 = {IMAFiltering}
    path noFilter = {alcatestingcalib}
#    path withFilter = {IMAFiltering, miscalrechit,alcatestingcalib}

# --- miscalibration ----- MF

#include "RecoLocalCalo/EcalRecProducers/data/ecalLocalRecoSequence.cff"
     es_source = CaloMiscalibTools{
#         untracked string fileNameBarrel = "miscalib_barrel_0.05.xml"
#         untracked string fileNameBarrel = "EBrecalib.xml"
#         untracked string fileNameEndcap = "miscalib_endcap_0.05.xml"
#         untracked string fileNameEndcap = "EErecalib.xml"
         }
     es_prefer = CaloMiscalibTools{}

 module miscalrechit = EcalRecHitRecalib {
     string ecalRecHitsProducer = "alCaIsolatedElectrons"
     string barrelHitCollection = "alcaBarrelHits"
     string endcapHitCollection = "alcaEndcapHits"
     string RecalibBarrelHitCollection = "alcaBarrelHitsRecalib"
     string RecalibEndcapHitCollection = "alcaEndcapHitsRecalib"
     untracked double Refactor = 1.0
     untracked double Refactor_mean = 1.0            
 }
/*
module outAlcaReco = PoolOutputModule
    {
#      untracked string fileName = "/data/calib/csa07/alcaReco/Famos/ElectronsIMAFilter.root" 
      untracked string fileName = "out.root" 
      untracked vstring outputCommands = 
      {
          "drop  *",
          "keep  *_IMAFiltering_*_*",
          "keep  *_alCaIsolatedElectrons_*_*"
      }
      untracked PSet SelectEvents = 
      {
          vstring SelectEvents = { "p6" }
      }
    }

    endpath outpathAlca = { outAlcaReco }
*/
}
